.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "STDIN 1"
.TH STDIN 1 2023-10-12 "perl v5.38.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
geoip \- a tool to show geographical data based on hostname or IP address(es)
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& geoip \-\-help
\&
\& geoip \-\-fetch [\-\-no\-update]
\&
\& geoip [options] [host|IP ...]
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This tool uses a database to use the (pre-fetched) GeoIP2 data from MaxMind
to show related geographical information for IP addresses. This information
can optionally be extended with information from online WHOIS services and
or derived data, like distance to the location of the server this tool runs
on or a configured local location.
.PP
The output is plain text or JSON. JSON may be short or formatted.
.SS Configuration
.IX Subsection "Configuration"
The tool allows the use of configuration files. It tests for existence of
the files listed here. All existing files is read (in this order) if it is
only writable by the author (mode \f(CW0640\fR should do).
.PP
.Vb 3
\&   $home/geoip.rc
\&   $home/.geoiprc
\&   $home/.config/geoip
.Ve
.PP
where \f(CW$home\fR is either of \f(CW$HOME\fR, \f(CW$USERPROFILE\fR, or \f(CW$HOMEPATH\fR.
.PP
The format of the file is
.PP
.Vb 4
\&  # Comment
\&  ; Comment
\&  option : value
\&  option = value
.Ve
.PP
where the \f(CW\*(C`:\*(C'\fR and \f(CW\*(C`=\*(C'\fR are equal and whitespace around them is optional
and ignored. The values \f(CW\*(C`False\*(C'\fR and \f(CW\*(C`No\*(C'\fR (case insensitive) are the same
as \f(CW0\fR and the values \f(CW\*(C`True\*(C'\fR and \f(CW\*(C`Yes\*(C'\fR are equal to \f(CW1\fR. For readability
you can prefix \f(CW\*(C`use_\*(C'\fR to most options (it is ignored). The use of \f(CW\*(C`\-\*(C'\fR in
option names is allowed and will be translated to \f(CW\*(C`_\*(C'\fR.
.PP
The recognized options and the command line equivalences are
.IP fetch 2
.IX Item "fetch"
command line option : \f(CW\*(C`\-f\*(C'\fR or \f(CW\*(C`\-\-fetch\*(C'\fR
.Sp
default value       : False
.Sp
Fetch new databases from the MaxMind site.
.IP update 2
.IX Item "update"
command line option : \f(CW\*(C`\-u\*(C'\fR or \f(CW\*(C`\-\-update\*(C'\fR
.Sp
default value       : True
.Sp
Only in effect when used with \f(CW\*(C`\-\-fetch\*(C'\fR: when new data files from MaxMind
have successfully been fetched and any of these is newer that what the
database contains, update the database with the new data.
.IP distance 2
.IX Item "distance"
command line option : \f(CW\*(C`\-d\*(C'\fR or \f(CW\*(C`\-\-distance\*(C'\fR
.Sp
default value       : False
.Sp
If both the location of the tool \fIand\fR the location of the requested IP
are known, calculate the distance between them. The default is to show
the distance in kilometers. Choosing a configuration of \f(CW\*(C`miles\*(C'\fR instead
of \f(CW\*(C`True\*(C'\fR, \f(CW\*(C`Yes\*(C'\fR, or \f(CW1\fR will show the distance in miles. There is no
command line option for miles.
.Sp
The location of the tool is either locally stored in your configuration
(see \f(CW\*(C`\-\-local\-location\*(C'\fR) or fetched using the result of the urls
\&\f(CW\*(C`iplocation.com\*(C'\fR <https://iplocation.com> or
\&\f(CW\*(C`geoiptool\*(C'\fR <https://geoiptool.com>. This will \- of course \- not work
if there is no network connection or outside traffic is not allowed.
.IP whois 2
.IX Item "whois"
command line option : \f(CW\*(C`\-w\*(C'\fR or \f(CW\*(C`\-\-whois\*(C'\fR
.Sp
default value       : False
.Sp
If Net::Whois::IP is installed, and this option is true, this module
will be used to retrieve the \f(CW\*(C`whois\*(C'\fR information. This will not work if
there is no network connection or outside traffic is not allowed.
.IP short 2
.IX Item "short"
command line option : \f(CW\*(C`\-s\*(C'\fR or \f(CW\*(C`\-\-short\*(C'\fR
.Sp
default value       : False
.Sp
This option will disable the output of less-informative information like
location, EU-membership, satellite and proxy. This option, if True, will
also implicitly disable the \f(CW\*(C`distance\*(C'\fR and \f(CW\*(C`whois\*(C'\fR information.
.IP dsn 2
.IX Item "dsn"
command line option : \f(CW\*(C`\-Ddsn\*(C'\fR or \f(CW\*(C`\-\-DB=dsn\*(C'\fR
.Sp
default value       : \f(CW$ENV{EOIP_DBI_DSN}\fR or \f(CW\*(C`dbi:Pg:geoip\*(C'\fR
.Sp
See "DATABASE" for the (documented) list of supported database types.
.Sp
If the connection works, the tables used by this tool will be created if
not yet present.
.Sp
The order of usage is:
.RS 2
.IP 1. 2
Command line argument (\f(CW\*(C`\-\-DB=dsn\*(C'\fR)
.IP 2. 2
The \f(CW\*(C`GEOIP_DBI_DSN\*(C'\fR environment variable
.IP 3. 2
The value for \f(CW\*(C`dsn\*(C'\fR in the configuration file(s)
.IP 4. 2
\&\f(CW\*(C`dbi:Pg:dbname=geoip\*(C'\fR
.RE
.RS 2
.RE
.IP json 2
.IX Item "json"
command line option : \f(CW\*(C`\-j\*(C'\fR or \f(CW\*(C`\-\-json\*(C'\fR
.Sp
default value       : False
.Sp
The default output for the information is plain text. With this option,
the output will be in JSON format. The default is not prettified.
.IP json-pretty 2
.IX Item "json-pretty"
command line option : \f(CW\*(C`\-J\*(C'\fR or \f(CW\*(C`\-\-json\-pretty\*(C'\fR
.Sp
default value       : False
.Sp
If set from the command-line, this implies the \f(CW\*(C`\-\-json\*(C'\fR option.
.Sp
With this option, JSON output is done \fIpretty\fR (indented).
.IP local-location 2
.IX Item "local-location"
command line option : \f(CW\*(C`\-l lat/lon\*(C'\fR or \f(CW\*(C`\-\-local=lat/lon\*(C'\fR
.Sp
default value       : Undefined
.Sp
Sets the local location coordinates for use with distances.
.Sp
When running the tool from a different location than where the IP access is
to be analyzed for or when the network connection will not report a location
that would make sense (like working from a cloud or running over one or more
VPN connections), one can set the location of the base in decimal notation.
(degree-minute-second-notation is not yet supported).
.Sp
This is also useful when there is no outbound connection possible or when you
do not move location and you want to restrict network requests.
.Sp
The notation is decimal (with a \f(CW\*(C`.\*(C'\fR, no localization support) where latitude
and longitude are separated by a \f(CW\*(C`/\*(C'\fR or a \f(CW\*(C`,\*(C'\fR, like \f(CW\*(C`\-l 12.345678/\-9.876543\*(C'\fR
or \f(CW\*(C`\-\-local=12,3456,45,6789\*(C'\fR.
.IP maxmind-account 2
.IX Item "maxmind-account"
command line option : none
.Sp
default value       : Undefined
.Sp
Currently not (yet) used. Documentation only.
.IP license-id 2
.IX Item "license-id"
command line option : none
.Sp
default value       : Undefined
.Sp
Currently not (yet) used. Documentation only.
.IP license-key 2
.IX Item "license-key"
command line option : none
.Sp
default value       : Undefined
.Sp
As downloads are only allowed/possible using a valid MaxMind account, you need
to provide a valid license key in your configuration file. If you do not have
an account, you can sign up here <https://www.maxmind.com/en/geolite2/signup>.
.SH DATABASE
.IX Header "DATABASE"
Currently PostgreSQL and SQLite have been tested, but others may (or may not)
work just as well. YMMV. Note that the database need to know the \f(CW\*(C`CIDR\*(C'\fR
field type and is able to put a primary key on it.
.PP
MariaDB and MySQL are not supported, as they do not support the concept of
CIDR type fields.
.PP
The advantage of PostgreSQL over SQLite is that you can use it with multiple
users at the same time, and that you can share the database with other hosts
on the same network behind a firewall.
.PP
The advantage of SQLite over PostgreSQL is that it is a single file that you
can copy or move to your liking. This file will be somewhere around 500 Mb.
.SH EXAMPLES
.IX Header "EXAMPLES"
.SS Configuration
.IX Subsection "Configuration"
.Vb 3
\& $ cat ~/.config/geoip
\& use_distance    : True
\& json\-pretty     : yes
.Ve
.SS "Basic use"
.IX Subsection "Basic use"
.Vb 1
\& $ geoip \-\-short 1.2.3.4
.Ve
.SS "For automation"
.IX Subsection "For automation"
.Vb 1
\& $ geoip \-\-json \-\-no\-json\-pretty 1.2.3.4
\&
\& $ env GEOIP_HOST=1.2.3.4 geoip
.Ve
.SS "Full report"
.IX Subsection "Full report"
.Vb 1
\& $ geoip \-\-dist \-\-whois 1.2.3.4
.Ve
.SS "Selecting CIDR's for countries"
.IX Subsection "Selecting CIDR's for countries"
\fIList all CIDR's for Vatican City\fR
.IX Subsection "List all CIDR's for Vatican City"
.PP
.Vb 1
\& $ geoip \-\-country=Vatican > vatican\-city.cidr
.Ve
.PP
\fIStatistics\fR
.IX Subsection "Statistics"
.PP
If you enable verbosity, the selected statistics will be presented at the
end of the CIDR-list: number of CIDR's, number of enclosed IP's, name of
the country and the continent. As the country name is just a perl regex,
you can select all countries with \f(CW\*(C`.\*(C'\fR, or all countries that start with
a \f(CW\*(C`V\*(C'\fR:
.PP
.Vb 8
\& $ geoip \-\-country=^V \-v >/dev/null
\& Selected CIDR\*(Aqs
\& # CIDR       # IP Country               Continent
\& \-\-\-\-\-\- \-\-\-\-\-\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&     21      18176 Vanuatu               Oceania
\&    321      13056 Vatican City          Europe
\&    272    6798500 Venezuela             South America
\&    612   16014080 Vietnam               Asia
.Ve
.SH TODO
.IX Header "TODO"
.IP IPv6 2
.IX Item "IPv6"
The ZIP files also contain IPv6 information, but it is not (yet) converted
to the database, nor supported in analysis.
.IP Modularization 2
.IX Item "Modularization"
Split up the different parts of the script to modules: fetch, extract,
check, database, external tools, reporting.
.IP CPAN 2
.IX Item "CPAN"
Turn this into something like App::geoip, complete with Makefile.PL
.SH "SEE ALSO"
.IX Header "SEE ALSO"
DBI, Net::CIDR, Math::Trig, LWP::Simple, Archive::ZIP,
Text::CSV_XS, JSON::PP, GIS::Distance, Net::Whois::IP,
HTML::TreeBuilder, Data::Dumper, Data::Peek, Socket
.PP
Geo::Coder::HostIP, Geo::IP, Geo::IP2Location, Geo::IP2Proxy,
Geo::IP6, Geo::IPfree, Geo::IP::RU::IpGeoBase, IP::Country,
IP::Country::DB_File, IP::Country::DNSBL, IP::Info, IP::Location,
IP::QQWry, IP::World, Metabrik::Lookup::Iplocation, Pcore::GeoIP
.PP
IP::Geolocation::MMDB
.PP
Check CPAN <https://metacpan.org/search?q=geoip> for more.
.SH THANKS
.IX Header "THANKS"
Thanks to cavac for the inspiration
.SH AUTHOR
.IX Header "AUTHOR"
H.Merijn Brand \fI<hmbrand@cpan.org>\fR, aka Tux.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
The GeoLite2 end-user license agreement, which incorporates components of the
Creative Commons Attribution-ShareAlike 4.0 International License 1) can be found
here <https://www.maxmind.com/en/geolite2/eula> 2). The attribution requirement
may be met by including the following in all advertising and documentation
mentioning features of or use of this database.
.PP
This tool uses, but does not include, the GeoLite2 data created by MaxMind,
available from [http://www.maxmind.com](http://www.maxmind.com).
.PP
.Vb 1
\& Copyright (C) 2018\-2023 H.Merijn Brand.  All rights reserved.
.Ve
.PP
This library is free software;  you can redistribute and/or modify it under
the same terms as Perl itself.
See here <https://opensource.org/licenses/Artistic-2.0> 3).
.PP
.Vb 3
\& 1) https://creativecommons.org/licenses/by\-sa/4.0/
\& 2) https://www.maxmind.com/en/geolite2/eula
\& 3) https://opensource.org/licenses/Artistic\-2.0
.Ve
